<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="92" errors="0" failures="18" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2018-05-07" time="16:08:03">
  <environment user="a_jwainwright" machine-name="NOLJASONW1" cwd="C:\F5BigIP" user-domain="PAYDAYONE" platform="Microsoft Windows 10 Enterprise|C:\WINDOWS|\Device\Harddisk0\Partition2" nunit-version="2.5.8.0" os-version="10.0.16299" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="16.036" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\Add-F5ClientSslProfile.Tests.ps1" executed="True" result="Success" success="True" time="0.413" asserts="0" description="C:\F5BigIP\Tests\Add-F5ClientSslProfile.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Add-F5ClientSslProfile" executed="True" result="Success" success="True" time="0.413" asserts="0" description="Add-F5ClientSslProfile">
            <results>
              <test-suite type="TestFixture" name="Testing Parameters" executed="True" result="Success" success="True" time="0.2445" asserts="0" description="Testing Parameters">
                <results>
                  <test-case description="Should throw when mandatory parameters are not provided" name="Add-F5ClientSslProfile.Testing Parameters.Should throw when mandatory parameters are not provided" time="0.2445" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing creating new Client SSL Profile" executed="True" result="Success" success="True" time="0.0782" asserts="0" description="Testing creating new Client SSL Profile">
                <results>
                  <test-case description="Should return object with correct properties" name="Add-F5ClientSslProfile.Testing creating new Client SSL Profile.Should return object with correct properties" time="0.067" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should check that we call New-F5ClientSslProfile once" name="Add-F5ClientSslProfile.Testing creating new Client SSL Profile.Should check that we call New-F5ClientSslProfile once" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing updating exisitng Client SSL Profile" executed="True" result="Success" success="True" time="0.0903" asserts="0" description="Testing updating exisitng Client SSL Profile">
                <results>
                  <test-case description="Should return object with correct properties" name="Add-F5ClientSslProfile.Testing updating exisitng Client SSL Profile.Should return object with correct properties" time="0.0696" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should check that we call Update-F5ClientSslProfile once" name="Add-F5ClientSslProfile.Testing updating exisitng Client SSL Profile.Should check that we call Update-F5ClientSslProfile once" time="0.0207" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\Add-F5Node.Tests.ps1" executed="True" result="Failure" success="False" time="9.5756" asserts="0" description="C:\F5BigIP\Tests\Add-F5Node.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Add-F5Node" executed="True" result="Failure" success="False" time="9.5756" asserts="0" description="Add-F5Node">
            <results>
              <test-suite type="TestFixture" name="Testing Parameters" executed="True" result="Success" success="True" time="0.2789" asserts="0" description="Testing Parameters">
                <results>
                  <test-case description="Should throw when mandatory parameters are not provided" name="Add-F5Node.Testing Parameters.Should throw when mandatory parameters are not provided" time="0.2789" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing adding exisitng node with correct IP" executed="True" result="Failure" success="False" time="9.0483" asserts="0" description="Testing adding exisitng node with correct IP">
                <results>
                  <test-case description="Error occurred in Context block" name="Add-F5Node.Testing adding exisitng node with correct IP.Error occurred in Context block" time="9.0483" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Cannot bind parameter 'Uri'. Cannot convert value "https:///mgmt/tm/ltm/node" to type "System.Uri". Error: "Invalid URI: The hostname could not be parsed."</message>
                      <stack-trace>At C:\F5BigIP\Tests\Add-F5Node.Tests.ps1:57 char:23</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing if IP of new node is used buy another node" executed="True" result="Failure" success="False" time="0.0617" asserts="0" description="Testing if IP of new node is used buy another node">
                <results>
                  <test-case description="Error occurred in Context block" name="Add-F5Node.Testing if IP of new node is used buy another node.Error occurred in Context block" time="0.0617" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Cannot bind parameter 'Uri'. Cannot convert value "https:///mgmt/tm/ltm/node" to type "System.Uri". Error: "Invalid URI: The hostname could not be parsed."</message>
                      <stack-trace>At C:\F5BigIP\Tests\Add-F5Node.Tests.ps1:74 char:23</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing if IP of new node is used buy another node" executed="True" result="Failure" success="False" time="0.0599" asserts="0" description="Testing if IP of new node is used buy another node">
                <results>
                  <test-case description="Error occurred in Context block" name="Add-F5Node.Testing if IP of new node is used buy another node.Error occurred in Context block" time="0.0599" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Cannot bind parameter 'Uri'. Cannot convert value "https:///mgmt/tm/ltm/node" to type "System.Uri". Error: "Invalid URI: The hostname could not be parsed."</message>
                      <stack-trace>At C:\F5BigIP\Tests\Add-F5Node.Tests.ps1:97 char:23</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing if IP of new node is used buy another node w/Force" executed="True" result="Failure" success="False" time="0.0646" asserts="0" description="Testing if IP of new node is used buy another node w/Force">
                <results>
                  <test-case description="Error occurred in Context block" name="Add-F5Node.Testing if IP of new node is used buy another node w/Force.Error occurred in Context block" time="0.0646" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Cannot bind parameter 'Uri'. Cannot convert value "https:///mgmt/tm/ltm/node" to type "System.Uri". Error: "Invalid URI: The hostname could not be parsed."</message>
                      <stack-trace>At C:\F5BigIP\Tests\Add-F5Node.Tests.ps1:120 char:23</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing if IP of new node is used buy another node w/Force" executed="True" result="Failure" success="False" time="0.0621" asserts="0" description="Testing if IP of new node is used buy another node w/Force">
                <results>
                  <test-case description="Error occurred in Context block" name="Add-F5Node.Testing if IP of new node is used buy another node w/Force.Error occurred in Context block" time="0.0621" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Cannot bind parameter 'Uri'. Cannot convert value "https:///mgmt/tm/ltm/node" to type "System.Uri". Error: "Invalid URI: The hostname could not be parsed."</message>
                      <stack-trace>At C:\F5BigIP\Tests\Add-F5Node.Tests.ps1:139 char:23</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\Add-F5Pool.Tests.ps1" executed="True" result="Failure" success="False" time="0.5071" asserts="0" description="C:\F5BigIP\Tests\Add-F5Pool.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Add-F5Pool" executed="True" result="Failure" success="False" time="0.5071" asserts="0" description="Add-F5Pool">
            <results>
              <test-suite type="TestFixture" name="Testing Parameters" executed="True" result="Success" success="True" time="0.2544" asserts="0" description="Testing Parameters">
                <results>
                  <test-case description="Should throw when mandatory parameters are not provided" name="Add-F5Pool.Testing Parameters.Should throw when mandatory parameters are not provided" time="0.2544" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing adding new pool" executed="True" result="Failure" success="False" time="0.0714" asserts="0" description="Testing adding new pool">
                <results>
                  <test-case description="Error occurred in Context block" name="Add-F5Pool.Testing adding new pool.Error occurred in Context block" time="0.0714" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>A parameter cannot be found that matches parameter name 'F5Name'.</message>
                      <stack-trace>At C:\F5BigIP\Tests\Add-F5Pool.Tests.ps1:61 char:23</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing that all servers are in a pre-existing pool already" executed="True" result="Failure" success="False" time="0.0665" asserts="0" description="Testing that all servers are in a pre-existing pool already">
                <results>
                  <test-case description="Error occurred in Context block" name="Add-F5Pool.Testing that all servers are in a pre-existing pool already.Error occurred in Context block" time="0.0665" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>A parameter cannot be found that matches parameter name 'F5Name'.</message>
                      <stack-trace>At C:\F5BigIP\Tests\Add-F5Pool.Tests.ps1:75 char:23</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing adding one server to a pre-existing pool with one server" executed="True" result="Failure" success="False" time="0.0574" asserts="0" description="Testing adding one server to a pre-existing pool with one server">
                <results>
                  <test-case description="Error occurred in Context block" name="Add-F5Pool.Testing adding one server to a pre-existing pool with one server.Error occurred in Context block" time="0.0574" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>A parameter cannot be found that matches parameter name 'F5Name'.</message>
                      <stack-trace>At C:\F5BigIP\Tests\Add-F5Pool.Tests.ps1:96 char:23</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing add multiple servers to an empty pool" executed="True" result="Failure" success="False" time="0.0574" asserts="0" description="Testing add multiple servers to an empty pool">
                <results>
                  <test-case description="Error occurred in Context block" name="Add-F5Pool.Testing add multiple servers to an empty pool.Error occurred in Context block" time="0.0574" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>A parameter cannot be found that matches parameter name 'F5Name'.</message>
                      <stack-trace>At C:\F5BigIP\Tests\Add-F5Pool.Tests.ps1:110 char:23</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\Clear-F5ClientSslProfile.Tests.ps1" executed="True" result="Success" success="True" time="0.3242" asserts="0" description="C:\F5BigIP\Tests\Clear-F5ClientSslProfile.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Clear-F5ClientSslProfile" executed="True" result="Success" success="True" time="0.3242" asserts="0" description="Clear-F5ClientSslProfile">
            <results>
              <test-suite type="TestFixture" name="Validating mandatory parameters" executed="True" result="Success" success="True" time="0.2566" asserts="0" description="Validating mandatory parameters">
                <results>
                  <test-case description="Should throw when mandatory parameters are not provided" name="Clear-F5ClientSslProfile.Validating mandatory parameters.Should throw when mandatory parameters are not provided" time="0.2566" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function - Calls Clear-F5ClientSslProfile" executed="True" result="Success" success="True" time="0.0676" asserts="0" description="Testing function - Calls Clear-F5ClientSslProfile">
                <results>
                  <test-case description="Validating function returns values" name="Clear-F5ClientSslProfile.Testing function - Calls Clear-F5ClientSslProfile.Validating function returns values" time="0.0567" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Invoke-RestMethod parameters in function" name="Clear-F5ClientSslProfile.Testing function - Calls Clear-F5ClientSslProfile.Validating Invoke-RestMethod parameters in function" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\Clear-F5Node.Tests.ps1" executed="True" result="Failure" success="False" time="0.3385" asserts="0" description="C:\F5BigIP\Tests\Clear-F5Node.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Clear-F5Node" executed="True" result="Failure" success="False" time="0.3385" asserts="0" description="Clear-F5Node">
            <results>
              <test-suite type="TestFixture" name="Validating mandatory parameters" executed="True" result="Failure" success="False" time="0.2753" asserts="0" description="Validating mandatory parameters">
                <results>
                  <test-case description="Should throw when mandatory parameters are not provided" name="Clear-F5Node.Validating mandatory parameters.Should throw when mandatory parameters are not provided" time="0.2753" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $true, but got $null.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\F5BigIP\Tests\Clear-F5Node.Tests.ps1: line 23
23:                 $cmdlet.Parameters.F5Name.Attributes.Mandatory | should be $true</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function - Calls Clear-F5Node" executed="True" result="Failure" success="False" time="0.0632" asserts="0" description="Testing function - Calls Clear-F5Node">
                <results>
                  <test-case description="Error occurred in Context block" name="Clear-F5Node.Testing function - Calls Clear-F5Node.Error occurred in Context block" time="0.0632" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>A parameter cannot be found that matches parameter name 'F5Name'.</message>
                      <stack-trace>At C:\F5BigIP\Tests\Clear-F5Node.Tests.ps1:37 char:37</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\Clear-F5Pool.Tests.ps1" executed="True" result="Success" success="True" time="0.3106" asserts="0" description="C:\F5BigIP\Tests\Clear-F5Pool.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Clear-F5Pool" executed="True" result="Success" success="True" time="0.3106" asserts="0" description="Clear-F5Pool">
            <results>
              <test-suite type="TestFixture" name="Validating mandatory parameters" executed="True" result="Success" success="True" time="0.2426" asserts="0" description="Validating mandatory parameters">
                <results>
                  <test-case description="Should throw when mandatory parameters are not provided" name="Clear-F5Pool.Validating mandatory parameters.Should throw when mandatory parameters are not provided" time="0.2426" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function - Calls  Clear-F5Pool" executed="True" result="Success" success="True" time="0.068" asserts="0" description="Testing function - Calls  Clear-F5Pool">
                <results>
                  <test-case description="Validating function returns values" name="Clear-F5Pool.Testing function - Calls  Clear-F5Pool.Validating function returns values" time="0.0573" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Invoke-RestMethod parameters in function" name="Clear-F5Pool.Testing function - Calls  Clear-F5Pool.Validating Invoke-RestMethod parameters in function" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\F5BigIP.tests.ps1" executed="True" result="Failure" success="False" time="0.8373" asserts="0" description="C:\F5BigIP\Tests\F5BigIP.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="General project validation: F5BigIP" executed="True" result="Failure" success="False" time="0.8373" asserts="0" description="General project validation: F5BigIP">
            <results>
              <test-suite type="ParameterizedTest" name="General project validation: F5BigIP.Script &lt;file&gt; should be valid powershell" executed="True" result="Failure" success="False" time="0.6243" asserts="0" description="Script &lt;file&gt; should be valid powershell">
                <results>
                  <test-case description="Script C:\F5BigIP\F5BigIP\Classes\001-F5Session.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Classes\001-F5Session.ps1 should be valid powershell" time="0.0843" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Classes\002-IpAddress.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Classes\002-IpAddress.ps1 should be valid powershell" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Classes\003-F5VirtualServer.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Classes\003-F5VirtualServer.ps1 should be valid powershell" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Classes\004-F5Member.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Classes\004-F5Member.ps1 should be valid powershell" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Classes\005-F5Pool.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Classes\005-F5Pool.ps1 should be valid powershell" time="0.0239" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 3.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\F5BigIP\Tests\F5BigIP.tests.ps1: line 20
20:         $errors.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Script C:\F5BigIP\F5BigIP\Classes\006-F5Node.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Classes\006-F5Node.ps1 should be valid powershell" time="0.0303" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0, but got 6.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\F5BigIP\Tests\F5BigIP.tests.ps1: line 20
20:         $errors.Count | Should Be 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Script C:\F5BigIP\F5BigIP\Private\Test-F5Session.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Private\Test-F5Session.ps1 should be valid powershell" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Add-F5ClientSslProfile.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Add-F5ClientSslProfile.ps1 should be valid powershell" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Add-F5Node.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Add-F5Node.ps1 should be valid powershell" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Add-F5Pool.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Add-F5Pool.ps1 should be valid powershell" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Clear-F5ClientSslProfile.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Clear-F5ClientSslProfile.ps1 should be valid powershell" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Clear-F5Node.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Clear-F5Node.ps1 should be valid powershell" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Clear-F5Pool.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Clear-F5Pool.ps1 should be valid powershell" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Get-F5ClientSslProfile.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Get-F5ClientSslProfile.ps1 should be valid powershell" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Get-F5Irule.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Get-F5Irule.ps1 should be valid powershell" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Get-F5Node.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Get-F5Node.ps1 should be valid powershell" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Get-F5Pool.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Get-F5Pool.ps1 should be valid powershell" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Get-F5PoolMember.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Get-F5PoolMember.ps1 should be valid powershell" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Get-F5SslCertificate.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Get-F5SslCertificate.ps1 should be valid powershell" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Get-F5VirtualServer.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Get-F5VirtualServer.ps1 should be valid powershell" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\New-F5ClientSslProfile.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\New-F5ClientSslProfile.ps1 should be valid powershell" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\New-F5Node.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\New-F5Node.ps1 should be valid powershell" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\New-F5Pool.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\New-F5Pool.ps1 should be valid powershell" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\New-F5Session.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\New-F5Session.ps1 should be valid powershell" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\New-F5SslCertificate.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\New-F5SslCertificate.ps1 should be valid powershell" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\New-F5VirtualServer.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\New-F5VirtualServer.ps1 should be valid powershell" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Update-F5ClientSslProfile.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Update-F5ClientSslProfile.ps1 should be valid powershell" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Update-F5Node.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Update-F5Node.ps1 should be valid powershell" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\Public\Update-F5PoolMember.ps1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\Public\Update-F5PoolMember.ps1 should be valid powershell" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\F5BigIP.psd1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\F5BigIP.psd1 should be valid powershell" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\F5BigIP\F5BigIP\F5BigIP.psm1 should be valid powershell" name="General project validation: F5BigIP.Script C:\F5BigIP\F5BigIP\F5BigIP.psm1 should be valid powershell" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Module 'F5BigIP' can import cleanly" name="General project validation: F5BigIP.Module 'F5BigIP' can import cleanly" time="0.213" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\Get-F5SslCertificate.Tests.ps1" executed="True" result="Success" success="True" time="0.5355" asserts="0" description="C:\F5BigIP\Tests\Get-F5SslCertificate.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-F5SslCertificate" executed="True" result="Success" success="True" time="0.5355" asserts="0" description="Get-F5SslCertificate">
            <results>
              <test-suite type="TestFixture" name="Testing Parameters" executed="True" result="Success" success="True" time="0.4232" asserts="0" description="Testing Parameters">
                <results>
                  <test-case description="Should throw when mandatory parameters are not provided" name="Get-F5SslCertificate.Testing Parameters.Should throw when mandatory parameters are not provided" time="0.3922" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should have non-mandatory parameters and not throw when they are not used" name="Get-F5SslCertificate.Testing Parameters.Should have non-mandatory parameters and not throw when they are not used" time="0.0114" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="CertificateName parameter should accept an array of strings" name="Get-F5SslCertificate.Testing Parameters.CertificateName parameter should accept an array of strings" time="0.0196" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function calls Invoke-RestMethod" executed="True" result="Success" success="True" time="0.1122" asserts="0" description="Testing function calls Invoke-RestMethod">
                <results>
                  <test-case description="Should Invoke-RestMethod to get all Certificates when GetAllCertificates switch is used" name="Get-F5SslCertificate.Testing function calls Invoke-RestMethod.Should Invoke-RestMethod to get all Certificates when GetAllCertificates switch is used" time="0.0758" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Invoke-RestMethod to get one Certificate when CertificateName parameter is used" name="Get-F5SslCertificate.Testing function calls Invoke-RestMethod.Should Invoke-RestMethod to get one Certificate when CertificateName parameter is used" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\New-F5ClientSslProfile.Tests.ps1" executed="True" result="Success" success="True" time="0.4457" asserts="0" description="C:\F5BigIP\Tests\New-F5ClientSslProfile.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="New-F5ClientSslProfile" executed="True" result="Success" success="True" time="0.4457" asserts="0" description="New-F5ClientSslProfile">
            <results>
              <test-suite type="TestFixture" name="Validating mandatory parameters" executed="True" result="Success" success="True" time="0.3745" asserts="0" description="Validating mandatory parameters">
                <results>
                  <test-case description="Should throw when mandatory parameters are not provided" name="New-F5ClientSslProfile.Validating mandatory parameters.Should throw when mandatory parameters are not provided" time="0.3745" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function - Calls New-F5ClientSslProfile" executed="True" result="Success" success="True" time="0.0712" asserts="0" description="Testing function - Calls New-F5ClientSslProfile">
                <results>
                  <test-case description="Validating function returns values" name="New-F5ClientSslProfile.Testing function - Calls New-F5ClientSslProfile.Validating function returns values" time="0.0594" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Invoke-RestMethod parameters in function" name="New-F5ClientSslProfile.Testing function - Calls New-F5ClientSslProfile.Validating Invoke-RestMethod parameters in function" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\New-F5Node.Tests.ps1" executed="True" result="Failure" success="False" time="0.3276" asserts="0" description="C:\F5BigIP\Tests\New-F5Node.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="New-F5Node" executed="True" result="Failure" success="False" time="0.3276" asserts="0" description="New-F5Node">
            <results>
              <test-suite type="TestFixture" name="Testing Parameters" executed="True" result="Failure" success="False" time="0.2652" asserts="0" description="Testing Parameters">
                <results>
                  <test-case description="Should throw when mandatory parameters are not provided" name="New-F5Node.Testing Parameters.Should throw when mandatory parameters are not provided" time="0.2652" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $true, but got $null.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\F5BigIP\Tests\New-F5Node.Tests.ps1: line 24
24:                 $cmdlet.Parameters.F5Name.Attributes.Mandatory | should be $true</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function calls Invoke-RestMethod" executed="True" result="Failure" success="False" time="0.0624" asserts="0" description="Testing function calls Invoke-RestMethod">
                <results>
                  <test-case description="Error occurred in Context block" name="New-F5Node.Testing function calls Invoke-RestMethod.Error occurred in Context block" time="0.0624" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>A parameter cannot be found that matches parameter name 'Token'.</message>
                      <stack-trace>At C:\F5BigIP\Tests\New-F5Node.Tests.ps1:45 char:34</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\New-F5Pool.Tests.ps1" executed="True" result="Success" success="True" time="0.4761" asserts="0" description="C:\F5BigIP\Tests\New-F5Pool.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="New-F5Pool" executed="True" result="Success" success="True" time="0.4761" asserts="0" description="New-F5Pool">
            <results>
              <test-suite type="TestFixture" name="Validating mandatory parameters" executed="True" result="Success" success="True" time="0.2569" asserts="0" description="Validating mandatory parameters">
                <results>
                  <test-case description="Should throw when mandatory parameters are not provided" name="New-F5Pool.Validating mandatory parameters.Should throw when mandatory parameters are not provided" time="0.2569" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function - Calls New-F5Pool" executed="True" result="Success" success="True" time="0.07" asserts="0" description="Testing function - Calls New-F5Pool">
                <results>
                  <test-case description="Should return object with correct properties" name="New-F5Pool.Testing function - Calls New-F5Pool.Should return object with correct properties" time="0.0603" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Invoke-RestMethod parameters in function" name="New-F5Pool.Testing function - Calls New-F5Pool.Validating Invoke-RestMethod parameters in function" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function - Calls New-F5Pool w\CustomMonitor" executed="True" result="Success" success="True" time="0.0559" asserts="0" description="Testing function - Calls New-F5Pool w\CustomMonitor">
                <results>
                  <test-case description="Validating Invoke-RestMethod parameters in function" name="New-F5Pool.Testing function - Calls New-F5Pool w\CustomMonitor.Validating Invoke-RestMethod parameters in function" time="0.0559" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function - Calls New-F5Pool w\pool member" executed="True" result="Success" success="True" time="0.0461" asserts="0" description="Testing function - Calls New-F5Pool w\pool member">
                <results>
                  <test-case description="Validating Invoke-RestMethod parameters in function" name="New-F5Pool.Testing function - Calls New-F5Pool w\pool member.Validating Invoke-RestMethod parameters in function" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function - Calls New-F5Pool w\pool member" executed="True" result="Success" success="True" time="0.0472" asserts="0" description="Testing function - Calls New-F5Pool w\pool member">
                <results>
                  <test-case description="Validating Invoke-RestMethod parameters in function" name="New-F5Pool.Testing function - Calls New-F5Pool w\pool member.Validating Invoke-RestMethod parameters in function" time="0.0472" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\New-F5RestApiToken.Tests.ps1" executed="True" result="Failure" success="False" time="0.3772" asserts="0" description="C:\F5BigIP\Tests\New-F5RestApiToken.Tests.ps1">
        <results>
          <test-case description="Error occurred in test script 'C:\F5BigIP\Tests\New-F5RestApiToken.Tests.ps1'" name="Error occurred in test script 'C:\F5BigIP\Tests\New-F5RestApiToken.Tests.ps1'" time="0.3772" asserts="0" success="False" result="Failure" executed="True">
            <failure>
              <message>The term 'New-F5RestApiToken' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
              <stack-trace>at &lt;ScriptBlock&gt;, C:\F5BigIP\Tests\New-F5RestApiToken.Tests.ps1: line 13</stack-trace>
            </failure>
          </test-case>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\New-F5VirtualServer.Tests.ps1" executed="True" result="Success" success="True" time="0.523" asserts="0" description="C:\F5BigIP\Tests\New-F5VirtualServer.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="New-F5VirtualServer" executed="True" result="Success" success="True" time="0.523" asserts="0" description="New-F5VirtualServer">
            <results>
              <test-suite type="TestFixture" name="Testing Parameters" executed="True" result="Success" success="True" time="0.254" asserts="0" description="Testing Parameters">
                <results>
                  <test-case description="Should throw when mandatory parameters are not provided" name="New-F5VirtualServer.Testing Parameters.Should throw when mandatory parameters are not provided" time="0.254" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function calls New-F5VirtualServer" executed="True" result="Success" success="True" time="0.0767" asserts="0" description="Testing function calls New-F5VirtualServer">
                <results>
                  <test-case description="Should return object with correct properties" name="New-F5VirtualServer.Testing function calls New-F5VirtualServer.Should return object with correct properties" time="0.0638" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Assert Invoke-RestMethod Mock is called 1 time and validate paramters stay as expected" name="New-F5VirtualServer.Testing function calls New-F5VirtualServer.Assert Invoke-RestMethod Mock is called 1 time and validate paramters stay as expected" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function calls New-F5VirtualServer with HTTP port" executed="True" result="Success" success="True" time="0.0709" asserts="0" description="Testing function calls New-F5VirtualServer with HTTP port">
                <results>
                  <test-case description="Should return object with correct properties" name="New-F5VirtualServer.Testing function calls New-F5VirtualServer with HTTP port.Should return object with correct properties" time="0.0609" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Assert Invoke-RestMethod Mock is called 1 time and validate paramters stay as expected" name="New-F5VirtualServer.Testing function calls New-F5VirtualServer with HTTP port.Assert Invoke-RestMethod Mock is called 1 time and validate paramters stay as expected" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function calls New-F5VirtualServer w/PoolName" executed="True" result="Success" success="True" time="0.0642" asserts="0" description="Testing function calls New-F5VirtualServer w/PoolName">
                <results>
                  <test-case description="Should return object with correct properties" name="New-F5VirtualServer.Testing function calls New-F5VirtualServer w/PoolName.Should return object with correct properties" time="0.0537" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Assert Invoke-RestMethod Mock is called 1 time and validate paramters stay as expected" name="New-F5VirtualServer.Testing function calls New-F5VirtualServer w/PoolName.Assert Invoke-RestMethod Mock is called 1 time and validate paramters stay as expected" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function calls New-F5VirtualServer w/ClientSSLProfileName" executed="True" result="Success" success="True" time="0.0572" asserts="0" description="Testing function calls New-F5VirtualServer w/ClientSSLProfileName">
                <results>
                  <test-case description="Should return object with correct properties" name="New-F5VirtualServer.Testing function calls New-F5VirtualServer w/ClientSSLProfileName.Should return object with correct properties" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Assert Invoke-RestMethod Mock is called 1 time and validate paramters stay as expected" name="New-F5VirtualServer.Testing function calls New-F5VirtualServer w/ClientSSLProfileName.Assert Invoke-RestMethod Mock is called 1 time and validate paramters stay as expected" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\Update-F5ClientSslProfile.Tests.ps1" executed="True" result="Success" success="True" time="0.3305" asserts="0" description="C:\F5BigIP\Tests\Update-F5ClientSslProfile.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Update-F5ClientSslProfile" executed="True" result="Success" success="True" time="0.3305" asserts="0" description="Update-F5ClientSslProfile">
            <results>
              <test-suite type="TestFixture" name="Testing Parameters" executed="True" result="Success" success="True" time="0.259" asserts="0" description="Testing Parameters">
                <results>
                  <test-case description="Should throw when mandatory parameters are not provided" name="Update-F5ClientSslProfile.Testing Parameters.Should throw when mandatory parameters are not provided" time="0.259" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function calls Invoke-RestMethod" executed="True" result="Success" success="True" time="0.0716" asserts="0" description="Testing function calls Invoke-RestMethod">
                <results>
                  <test-case description="Should return object with correct properties" name="Update-F5ClientSslProfile.Testing function calls Invoke-RestMethod.Should return object with correct properties" time="0.061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Assert each mock called 1 time" name="Update-F5ClientSslProfile.Testing function calls Invoke-RestMethod.Assert each mock called 1 time" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\Update-F5Node.Tests.ps1" executed="True" result="Failure" success="False" time="0.3276" asserts="0" description="C:\F5BigIP\Tests\Update-F5Node.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Update-F5Node" executed="True" result="Failure" success="False" time="0.3276" asserts="0" description="Update-F5Node">
            <results>
              <test-suite type="TestFixture" name="Testing Parameters" executed="True" result="Failure" success="False" time="0.2614" asserts="0" description="Testing Parameters">
                <results>
                  <test-case description="Should throw when mandatory parameters are not provided" name="Update-F5Node.Testing Parameters.Should throw when mandatory parameters are not provided" time="0.2614" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $true, but got $null.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\F5BigIP\Tests\Update-F5Node.Tests.ps1: line 24
24:                 $cmdlet.Parameters.F5Name.Attributes.Mandatory | should be $true</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function calls Invoke-RestMethod" executed="True" result="Failure" success="False" time="0.0661" asserts="0" description="Testing function calls Invoke-RestMethod">
                <results>
                  <test-case description="Error occurred in Context block" name="Update-F5Node.Testing function calls Invoke-RestMethod.Error occurred in Context block" time="0.0661" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>A parameter cannot be found that matches parameter name 'Token'.</message>
                      <stack-trace>At C:\F5BigIP\Tests\Update-F5Node.Tests.ps1:45 char:37</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\F5BigIP\Tests\Update-F5PoolMember.Tests.ps1" executed="True" result="Success" success="True" time="0.3866" asserts="0" description="C:\F5BigIP\Tests\Update-F5PoolMember.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Update-F5PoolMember" executed="True" result="Success" success="True" time="0.3866" asserts="0" description="Update-F5PoolMember">
            <results>
              <test-suite type="TestFixture" name="Testing Parameters" executed="True" result="Success" success="True" time="0.2549" asserts="0" description="Testing Parameters">
                <results>
                  <test-case description="Should throw when mandatory parameters are not provided" name="Update-F5PoolMember.Testing Parameters.Should throw when mandatory parameters are not provided" time="0.2549" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function Update-F5PoolMember - 2 servers" executed="True" result="Success" success="True" time="0.0678" asserts="0" description="Testing function Update-F5PoolMember - 2 servers">
                <results>
                  <test-case description="Should return object with correct properties" name="Update-F5PoolMember.Testing function Update-F5PoolMember - 2 servers.Should return object with correct properties" time="0.0572" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Assert each mock called 1 time" name="Update-F5PoolMember.Testing function Update-F5PoolMember - 2 servers.Assert each mock called 1 time" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing function Update-F5PoolMember - 1 server" executed="True" result="Success" success="True" time="0.0639" asserts="0" description="Testing function Update-F5PoolMember - 1 server">
                <results>
                  <test-case description="Should return object with correct properties" name="Update-F5PoolMember.Testing function Update-F5PoolMember - 1 server.Should return object with correct properties" time="0.0549" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Assert each mock called 1 time" name="Update-F5PoolMember.Testing function Update-F5PoolMember - 1 server.Assert each mock called 1 time" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>